apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  annotations:
    alm-examples: |-
      [
        {
          "apiVersion": "piraeus.io/v1",
          "kind": "LinstorCluster",
          "metadata": {
            "name": "linstorcluster"
          },
          "spec": {}
        },
        {
          "apiVersion": "piraeus.io/v1",
          "kind": "LinstorNodeConnection",
          "metadata": {
            "name": "cross-region-replication"
          },
          "spec": {
            "paths": [
              {
                "interface": "wan-nic",
                "name": "wan"
              }
            ],
            "properties": [
              {
                "name": "DrbdOptions/Net/protocol",
                "value": "A"
              }
            ],
            "selector": [
              {
                "matchLabels": [
                  {
                    "key": "example.com/storage",
                    "op": "In",
                    "values": [
                      "yes"
                    ]
                  },
                  {
                    "key": "topology.kubernetes.io/region",
                    "op": "NotSame"
                  }
                ]
              }
            ]
          }
        },
        {
          "apiVersion": "piraeus.io/v1",
          "kind": "LinstorSatelliteConfiguration",
          "metadata": {
            "name": "all-satellites"
          },
          "spec": {}
        }
      ]
    capabilities: Full Lifecycle
    createdAt: "2025-05-22T23:35:37Z"
    operators.openshift.io/infrastructure-features: '["csi"]'
    operators.operatorframework.io/builder: operator-sdk-v1.39.2
    operators.operatorframework.io/internal-objects: '["linstorsatellites.piraeus.io"]'
    operators.operatorframework.io/project_layout: go.kubebuilder.io/v4
  labels:
    operatorframework.io/arch.amd64: supported
    operatorframework.io/arch.arm64: supported
    operatorframework.io/os.linux: supported
  name: piraeus-operator.v2.8.1
  namespace: placeholder
spec:
  apiservicedefinitions: {}
  customresourcedefinitions:
    owned:
    - description: LinstorCluster is the Schema for the linstorclusters API
      displayName: Linstor Cluster
      kind: LinstorCluster
      name: linstorclusters.piraeus.io
      statusDescriptors:
      - description: Conditions describe the current state of the LINSTOR Cluster
        displayName: Cluster Conditions
        path: conditions
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes.conditions
      version: v1
    - description: LinstorNodeConnection is the Schema for the linstornodeconnections
        API
      displayName: Linstor Node Connection
      kind: LinstorNodeConnection
      name: linstornodeconnections.piraeus.io
      statusDescriptors:
      - description: Conditions describe the current state of the LINSTOR Node Connections.
        displayName: Node Connections Conditions
        path: conditions
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes.conditions
      version: v1
    - description: LinstorSatelliteConfiguration is the Schema for the linstorsatelliteconfigurations
        API
      displayName: Linstor Satellite Configuration
      kind: LinstorSatelliteConfiguration
      name: linstorsatelliteconfigurations.piraeus.io
      statusDescriptors:
      - description: Conditions describe the current state of the LINSTOR Cluster
        displayName: Satellite Configuration Conditions
        path: conditions
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes.conditions
      version: v1
    - description: LinstorSatellite is the Schema for the linstorsatellites API
      displayName: Linstor Satellite
      kind: LinstorSatellite
      name: linstorsatellites.piraeus.io
      statusDescriptors:
      - description: Conditions describe the current state of the LINSTOR Cluster
        displayName: Satellite Conditions
        path: conditions
        x-descriptors:
        - urn:alm:descriptor:io.kubernetes.conditions
      version: v1
  description: |
    The Piraeus Operator manages [LINSTOR](https://github.com/LINBIT/linstor-server) clusters in Kubernetes.

    All components of the LINSTOR software stack can be managed by the operator:
    * DRBD
    * LINSTOR
    * LINSTOR CSI driver
  displayName: Piraeus Operator
  icon:
  - base64data: |
      PHN2ZyBoZWlnaHQ9IjE4MCIgdmlld0JveD0iMCAwIDE5MCAxODAiIHdpZHRoPSIxOTAiIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIgeG1sbnM6eGxpbms9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkveGxpbmsiPjxkZWZzPjxyZWN0IGlkPSJhIiBoZWlnaHQ9IjI4LjQ0NDQ0NSIgcng9IjEiIHdpZHRoPSIzNC45MDkwOTIiIHg9Ijc1Ljg3NzI3NCIgeT0iOTEuMTAyNTYyIi8+PGZpbHRlciBpZD0iYiIgaGVpZ2h0PSIxLjI4MSIgd2lkdGg9IjEuMjI5IiB4PSItLjExNSIgeT0iLS4wNyI+PGZlT2Zmc2V0IGR4PSIwIiBkeT0iMiIgaW49IlNvdXJjZUFscGhhIiByZXN1bHQ9InNoYWRvd09mZnNldE91dGVyMSIvPjxmZUdhdXNzaWFuQmx1ciBpbj0ic2hhZG93T2Zmc2V0T3V0ZXIxIiByZXN1bHQ9InNoYWRvd0JsdXJPdXRlcjEiIHN0ZERldmlhdGlvbj0iMSIvPjxmZUNvbG9yTWF0cml4IGluPSJzaGFkb3dCbHVyT3V0ZXIxIiB0eXBlPSJtYXRyaXgiIHZhbHVlcz0iMCAwIDAgMCAwICAgMCAwIDAgMCAwICAgMCAwIDAgMCAwICAwIDAgMCAwLjI1NDI3NDIzIDAiLz48L2ZpbHRlcj48cmVjdCBpZD0iYyIgaGVpZ2h0PSIyOC40NDQ0NDUiIHJ4PSIxIiB3aWR0aD0iMzQuOTA5MDkyIiB4PSIxMTguOTMxODIiIHk9IjkxLjEwMjU2MiIvPjxmaWx0ZXIgaWQ9ImQiIGhlaWdodD0iMS4yODEiIHdpZHRoPSIxLjIyOSIgeD0iLS4xMTUiIHk9Ii0uMDciPjxmZU9mZnNldCBkeD0iMCIgZHk9IjIiIGluPSJTb3VyY2VBbHBoYSIgcmVzdWx0PSJzaGFkb3dPZmZzZXRPdXRlcjEiLz48ZmVHYXVzc2lhbkJsdXIgaW49InNoYWRvd09mZnNldE91dGVyMSIgcmVzdWx0PSJzaGFkb3dCbHVyT3V0ZXIxIiBzdGREZXZpYXRpb249IjEiLz48ZmVDb2xvck1hdHJpeCBpbj0ic2hhZG93Qmx1ck91dGVyMSIgdHlwZT0ibWF0cml4IiB2YWx1ZXM9IjAgMCAwIDAgMCAgIDAgMCAwIDAgMCAgIDAgMCAwIDAgMCAgMCAwIDAgMC4yNTQyNzQyMyAwIi8+PC9maWx0ZXI+PHJlY3QgaWQ9ImUiIGhlaWdodD0iMjguNDQ0NDQ1IiByeD0iMSIgd2lkdGg9IjM0LjkwOTA5MiIgeD0iMTE4LjkzMTgyIiB5PSI1NS4wOTQwMTciLz48ZmlsdGVyIGlkPSJmIiBoZWlnaHQ9IjEuMjQ2IiB3aWR0aD0iMS4yMDEiIHk9Ii0uMDg4Ij48ZmVPZmZzZXQgZHg9IjAiIGR5PSIxIiBpbj0iU291cmNlQWxwaGEiIHJlc3VsdD0ic2hhZG93T2Zmc2V0T3V0ZXIxIi8+PGZlR2F1c3NpYW5CbHVyIGluPSJzaGFkb3dPZmZzZXRPdXRlcjEiIHJlc3VsdD0ic2hhZG93Qmx1ck91dGVyMSIgc3RkRGV2aWF0aW9uPSIxIi8+PGZlQ29sb3JNYXRyaXggaW49InNoYWRvd0JsdXJPdXRlcjEiIHR5cGU9Im1hdHJpeCIgdmFsdWVzPSIwIDAgMCAwIDAgICAwIDAgMCAwIDAgICAwIDAgMCAwIDAgIDAgMCAwIDAuMTAxOTg3MDkyIDAiLz48L2ZpbHRlcj48ZWxsaXBzZSBpZD0iZyIgY3g9Ijk0LjMzMTgxOCIgY3k9IjcwLjQxMDI1NSIgcng9IjE2LjI5MDkwOSIgcnk9IjE1LjMxNjIzOSIvPjxmaWx0ZXIgaWQ9ImgiIGhlaWdodD0iMS4yMjkiIHdpZHRoPSIxLjIxNSIgeD0iLS4xMDciIHk9Ii0uMDgyIj48ZmVPZmZzZXQgZHg9IjAiIGR5PSIxIiBpbj0iU291cmNlQWxwaGEiIHJlc3VsdD0ic2hhZG93T2Zmc2V0T3V0ZXIxIi8+PGZlR2F1c3NpYW5CbHVyIGluPSJzaGFkb3dPZmZzZXRPdXRlcjEiIHJlc3VsdD0ic2hhZG93Qmx1ck91dGVyMSIgc3RkRGV2aWF0aW9uPSIxIi8+PGZlQ29sb3JNYXRyaXggaW49InNoYWRvd0JsdXJPdXRlcjEiIHR5cGU9Im1hdHJpeCIgdmFsdWVzPSIwIDAgMCAwIDAgICAwIDAgMCAwIDAgICAwIDAgMCAwIDAgIDAgMCAwIDAuMTAxOTg3MDkyIDAiLz48L2ZpbHRlcj48cGF0aCBpZD0iaSIgZD0ibTExNC43OTAyIDEwMi4xMjU5MyAyOC4wNjA3NCA2Ny44Mzk4OGgtNTUuNDMyMjU2bC0zMi41NzU0NDYtNDcuODIwNzV6Ii8+PGZpbHRlciBpZD0iaiIgaGVpZ2h0PSIxLjE2MiIgd2lkdGg9IjEuMTI1IiB4PSItLjA2MiIgeT0iLS4wNjYiPjxmZU1vcnBob2xvZ3kgaW49IlNvdXJjZUFscGhhIiBvcGVyYXRvcj0iZGlsYXRlIiByYWRpdXM9IjAuNSIgcmVzdWx0PSJzaGFkb3dTcHJlYWRPdXRlcjEiLz48ZmVPZmZzZXQgZHg9IjAiIGR5PSIxIiBpbj0ic2hhZG93U3ByZWFkT3V0ZXIxIiByZXN1bHQ9InNoYWRvd09mZnNldE91dGVyMSIvPjxmZUdhdXNzaWFuQmx1ciBpbj0ic2hhZG93T2Zmc2V0T3V0ZXIxIiByZXN1bHQ9InNoYWRvd0JsdXJPdXRlcjEiIHN0ZERldmlhdGlvbj0iMS41Ii8+PGZlQ29tcG9zaXRlIGluPSJzaGFkb3dCbHVyT3V0ZXIxIiBpbjI9IlNvdXJjZUFscGhhIiBvcGVyYXRvcj0ib3V0IiByZXN1bHQ9InNoYWRvd0JsdXJPdXRlcjEiLz48ZmVDb2xvck1hdHJpeCBpbj0ic2hhZG93Qmx1ck91dGVyMSIgdHlwZT0ibWF0cml4IiB2YWx1ZXM9IjAgMCAwIDAgMC4xNjA5MDk4NzggICAwIDAgMCAwIDAuMjUyNjUxMjEyICAgMCAwIDAgMCAwLjUyNzg3NTIxMyAgMCAwIDAgMC4zNTMyNjA4NyAwIi8+PC9maWx0ZXI+PHBhdGggaWQ9ImsiIGQ9Im0xMTUuNDQwOTEgMTAyLjEyNTkzIDY0LjA2NjU3IDE5Ljg5OTctMzYuOTg2MTggNDcuOTQwMTgtMjcuMDgwMzktLjM4NzEyeiIvPjxmaWx0ZXIgaWQ9ImwiIGhlaWdodD0iMS4yMjEiIHdpZHRoPSIxLjIzNCIgeD0iLS4xMTciIHk9Ii0uMDgxIj48ZmVNb3JwaG9sb2d5IGluPSJTb3VyY2VBbHBoYSIgb3BlcmF0b3I9ImRpbGF0ZSIgcmFkaXVzPSIwLjUiIHJlc3VsdD0ic2hhZG93U3ByZWFkT3V0ZXIxIi8+PGZlT2Zmc2V0IGR4PSIwIiBkeT0iMiIgaW49InNoYWRvd1NwcmVhZE91dGVyMSIgcmVzdWx0PSJzaGFkb3dPZmZzZXRPdXRlcjEiLz48ZmVHYXVzc2lhbkJsdXIgaW49InNoYWRvd09mZnNldE91dGVyMSIgcmVzdWx0PSJzaGFkb3dCbHVyT3V0ZXIxIiBzdGREZXZpYXRpb249IjIiLz48ZmVDb21wb3NpdGUgaW49InNoYWRvd0JsdXJPdXRlcjEiIGluMj0iU291cmNlQWxwaGEiIG9wZXJhdG9yPSJvdXQiIHJlc3VsdD0ic2hhZG93Qmx1ck91dGVyMSIvPjxmZUNvbG9yTWF0cml4IGluPSJzaGFkb3dCbHVyT3V0ZXIxIiB0eXBlPSJtYXRyaXgiIHZhbHVlcz0iMCAwIDAgMCAwLjIzNTI5NDExOCAgIDAgMCAwIDAgMC4zODAzOTIxNTcgICAwIDAgMCAwIDAuODE1Njg2Mjc1ICAwIDAgMCAwLjE1OTQyMDI5IDAiLz48L2ZpbHRlcj48cmVjdCBpZD0ibSIgaGVpZ2h0PSIxNDMuMzE2MjQiIHJ4PSIxIiB3aWR0aD0iMzcuMjM2MzYyIiB4PSIuMjQwOTA5IiB5PSIzMS4wMjU2NCIvPjxmaWx0ZXIgaWQ9Im4iIGhlaWdodD0iMS4wOTEiIHdpZHRoPSIxLjM0OSIgeD0iLS4yMDEiIHk9Ii0uMDMxIj48ZmVNb3JwaG9sb2d5IGluPSJTb3VyY2VBbHBoYSIgb3BlcmF0b3I9ImVyb2RlIiByYWRpdXM9IjAuNSIgcmVzdWx0PSJzaGFkb3dTcHJlYWRPdXRlcjEiLz48ZmVPZmZzZXQgZHg9Ii0xIiBkeT0iMiIgaW49InNoYWRvd1NwcmVhZE91dGVyMSIgcmVzdWx0PSJzaGFkb3dPZmZzZXRPdXRlcjEiLz48ZmVHYXVzc2lhbkJsdXIgaW49InNoYWRvd09mZnNldE91dGVyMSIgcmVzdWx0PSJzaGFkb3dCbHVyT3V0ZXIxIiBzdGREZXZpYXRpb249IjIiLz48ZmVDb2xvck1hdHJpeCBpbj0ic2hhZG93Qmx1ck91dGVyMSIgdHlwZT0ibWF0cml4IiB2YWx1ZXM9IjAgMCAwIDAgMC42MjgwMjkzMzcgICAwIDAgMCAwIDAuMjU3ODMwMDggICAwIDAgMCAwIDAuMDcxMzc5MzYwMiAgMCAwIDAgMC4zMTExNDEzMDQgMCIvPjwvZmlsdGVyPjxwYXRoIGlkPSJvIiBkPSJtMS45NTAzNzQ1IDMyLjExMjAzN2gxNzYuNDE4Mzk1NWMuNTUyMjggMCAxLS40NDc3MTUgMS0xIDAtLjQ3MjgxNi0uMzMxMTUtLjg4MTAxOC0uNzkzODEtLjk3ODUxbC0xNDEuMTUyMTI1LTI5Ljc0NDE0MjY5Yy0uMzAxNDc2LS4wNjM1MjgxLS42MTU0MDQuMDE1NDU3NC0uODUwOTE4LjIxNDA5MzU4bC0zNS4yNjYyNjQ0IDI5Ljc0NDE0MjExYy0uNDIyMTc1OTguMzU2MDctLjQ3NTc2NTM4Ljk4Njk2My0uMTE5Njk1MyAxLjQwOTEzOS4xOTAwMDU0LjIyNTI4MS40Njk3MDgyLjM1NTI3OC43NjQ0MTcyLjM1NTI3OHoiLz48ZmlsdGVyIGlkPSJwIiBoZWlnaHQ9IjEuMzE1IiB3aWR0aD0iMS4wNTYiIHg9Ii0uMDI4IiB5PSItLjA5NSI+PGZlTW9ycGhvbG9neSBpbj0iU291cmNlQWxwaGEiIG9wZXJhdG9yPSJlcm9kZSIgcmFkaXVzPSIwLjUiIHJlc3VsdD0ic2hhZG93U3ByZWFkT3V0ZXIxIi8+PGZlT2Zmc2V0IGR4PSIwIiBkeT0iMiIgaW49InNoYWRvd1NwcmVhZE91dGVyMSIgcmVzdWx0PSJzaGFkb3dPZmZzZXRPdXRlcjEiLz48ZmVHYXVzc2lhbkJsdXIgaW49InNoYWRvd09mZnNldE91dGVyMSIgcmVzdWx0PSJzaGFkb3dCbHVyT3V0ZXIxIiBzdGREZXZpYXRpb249IjEuNSIvPjxmZUNvbG9yTWF0cml4IGluPSJzaGFkb3dCbHVyT3V0ZXIxIiB0eXBlPSJtYXRyaXgiIHZhbHVlcz0iMCAwIDAgMCAwLjU4OTg5Njg5NiAgIDAgMCAwIDAgMC40NDQyNjk3NjcgICAwIDAgMCAwIDAuMDIzMjE3NDE0NSAgMCAwIDAgMC4yMTM5NjYyNTkgMCIvPjwvZmlsdGVyPjxwYXRoIGlkPSJxIiBkPSJtMzcuNzE5MzA2LjYxNzQ4MTU1IDcwLjA2NTQ1NCAzMS4zNjkyMTc0NSA3MC44OTI5NC40NDgxODZjLjU1MjI3LjAwMzUgMS4wMDI4MS0uNDQxMzg1IDEuMDA2My0uOTkzNjU4LjAwMy0uNDc0OTQ5LS4zMjg0OS0uODg2NDg1LS43OTMxOC0uOTg0NzA2eiIvPjxmaWx0ZXIgaWQ9InIiIGhlaWdodD0iMS4xMjYiIHdpZHRoPSIxLjAyOCIgeD0iLS4wMjEiIHk9Ii0uMDYzIj48ZmVPZmZzZXQgZHg9Ii0xIiBkeT0iMCIgaW49IlNvdXJjZUFscGhhIiByZXN1bHQ9InNoYWRvd09mZnNldE91dGVyMSIvPjxmZUdhdXNzaWFuQmx1ciBpbj0ic2hhZG93T2Zmc2V0T3V0ZXIxIiByZXN1bHQ9InNoYWRvd0JsdXJPdXRlcjEiIHN0ZERldmlhdGlvbj0iLjUiLz48ZmVDb2xvck1hdHJpeCBpbj0ic2hhZG93Qmx1ck91dGVyMSIgdHlwZT0ibWF0cml4IiB2YWx1ZXM9IjAgMCAwIDAgMC43ODEzMjk3MTkgICAwIDAgMCAwIDAuNTMwMTMzMDYgICAwIDAgMCAwIDAuMjAyOTE2MzU5ICAwIDAgMCAwLjMxMTk2MjE4MyAwIi8+PC9maWx0ZXI+PC9kZWZzPjxnIGZpbGw9Im5vbmUiIGZpbGwtcnVsZT0iZXZlbm9kZCIgdHJhbnNmb3JtPSJ0cmFuc2xhdGUoNS4xMjAxNjcgMSkiPjx1c2UgZmlsbD0iIzAwMCIgZmlsdGVyPSJ1cmwoI2IpIiBoZWlnaHQ9IjEwMCUiIHdpZHRoPSIxMDAlIiB4bGluazpocmVmPSIjYSIvPjx1c2UgZmlsbD0iI2IyZGNlOSIgZmlsbC1ydWxlPSJldmVub2RkIiBoZWlnaHQ9IjEwMCUiIHdpZHRoPSIxMDAlIiB4bGluazpocmVmPSIjYSIvPjx1c2UgZmlsbD0iIzAwMCIgZmlsdGVyPSJ1cmwoI2QpIiBoZWlnaHQ9IjEwMCUiIHdpZHRoPSIxMDAlIiB4bGluazpocmVmPSIjYyIvPjx1c2UgZmlsbD0iI2IyZGNlOSIgZmlsbC1ydWxlPSJldmVub2RkIiBoZWlnaHQ9IjEwMCUiIHdpZHRoPSIxMDAlIiB4bGluazpocmVmPSIjYyIvPjx1c2UgZmlsbD0iIzAwMCIgZmlsdGVyPSJ1cmwoI2YpIiBoZWlnaHQ9IjEwMCUiIHdpZHRoPSIxMDAlIiB4bGluazpocmVmPSIjZSIvPjx1c2UgZmlsbD0iI2IyZGNlOSIgZmlsbC1ydWxlPSJldmVub2RkIiBoZWlnaHQ9IjEwMCUiIHdpZHRoPSIxMDAlIiB4bGluazpocmVmPSIjZSIvPjx1c2UgZmlsbD0iIzAwMCIgZmlsdGVyPSJ1cmwoI2gpIiBoZWlnaHQ9IjEwMCUiIHdpZHRoPSIxMDAlIiB4bGluazpocmVmPSIjZyIvPjx1c2UgZmlsbD0iI2M4ZDhlNCIgZmlsbC1ydWxlPSJldmVub2RkIiBoZWlnaHQ9IjEwMCUiIHdpZHRoPSIxMDAlIiB4bGluazpocmVmPSIjZyIvPjxnIGZpbGwtcnVsZT0ibm9uemVybyI+PGcgc3Ryb2tlLWxpbmVqb2luPSJyb3VuZCI+PHVzZSBmaWxsPSIjMDAwIiBmaWx0ZXI9InVybCgjaikiIGhlaWdodD0iMTAwJSIgd2lkdGg9IjEwMCUiIHhsaW5rOmhyZWY9IiNpIi8+PHVzZSBmaWxsPSIjM2I4N2VjIiBoZWlnaHQ9IjEwMCUiIHN0cm9rZT0iIzNiODdlYyIgd2lkdGg9IjEwMCUiIHhsaW5rOmhyZWY9IiNpIi8+PC9nPjxnIHN0cm9rZS1saW5lam9pbj0icm91bmQiPjx1c2UgZmlsbD0iIzAwMCIgZmlsdGVyPSJ1cmwoI2wpIiBoZWlnaHQ9IjEwMCUiIHdpZHRoPSIxMDAlIiB4bGluazpocmVmPSIjayIvPjx1c2UgZmlsbD0iIzNjNjFkMCIgaGVpZ2h0PSIxMDAlIiBzdHJva2U9IiMzYzYxZDAiIHdpZHRoPSIxMDAlIiB4bGluazpocmVmPSIjayIvPjwvZz48dXNlIGZpbGw9IiMwMDAiIGZpbHRlcj0idXJsKCNuKSIgaGVpZ2h0PSIxMDAlIiB3aWR0aD0iMTAwJSIgeGxpbms6aHJlZj0iI20iLz48dXNlIGZpbGw9IiNmNjk2MWYiIGhlaWdodD0iMTAwJSIgd2lkdGg9IjEwMCUiIHhsaW5rOmhyZWY9IiNtIi8+PHJlY3QgZmlsbD0iI2ZmZDE2YSIgaGVpZ2h0PSI1NC43MDA4NTUiIHJ4PSIxIiB3aWR0aD0iMzcuMjM2MzYyIiB4PSIuMjQwOTA5IiB5PSIzMS4wMjU2NCIvPjxwYXRoIGQ9Im0uMjQwOTA5IDc4LjA2ODM3NmgzNy4yMzYzNjR2NDcuMDQyNzM0aC0zNy4yMzYzNjR6IiBmaWxsPSIjZjliODYxIi8+PHVzZSBmaWxsPSIjMDAwIiBmaWx0ZXI9InVybCgjcCkiIGhlaWdodD0iMTAwJSIgd2lkdGg9IjEwMCUiIHhsaW5rOmhyZWY9IiNvIi8+PHVzZSBmaWxsPSIjZjY5NjFmIiBoZWlnaHQ9IjEwMCUiIHdpZHRoPSIxMDAlIiB4bGluazpocmVmPSIjbyIvPjwvZz48cGF0aCBkPSJtMzcuMTU2ODE1LjU5MDU4MTQxdjMxLjczNDExNjU5aDcwLjk3ODIwNXoiIGZpbGw9IiNmOWI4NjEiLz48dXNlIGZpbGw9IiMwMDAiIGZpbHRlcj0idXJsKCNyKSIgaGVpZ2h0PSIxMDAlIiB3aWR0aD0iMTAwJSIgeGxpbms6aHJlZj0iI3EiLz48dXNlIGZpbGw9IiNmZmQxNmEiIGZpbGwtcnVsZT0iZXZlbm9kZCIgaGVpZ2h0PSIxMDAlIiB3aWR0aD0iMTAwJSIgeGxpbms6aHJlZj0iI3EiLz48L2c+PC9zdmc+
    mediatype: image/svg+xml
  install:
    spec:
      clusterPermissions:
      - rules:
        - apiGroups:
          - ""
          resources:
          - configmaps
          - events
          - persistentvolumes
          - pods
          - secrets
          - serviceaccounts
          - services
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - ""
          resources:
          - nodes
          - persistentvolumeclaims
          verbs:
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - ""
          resources:
          - persistentvolumeclaims/status
          verbs:
          - patch
        - apiGroups:
          - ""
          resources:
          - pods/eviction
          verbs:
          - create
        - apiGroups:
          - apiextensions.k8s.io
          resources:
          - customresourcedefinitions
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - apps
          resources:
          - daemonsets
          - deployments
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - apps
          resources:
          - replicasets
          verbs:
          - get
        - apiGroups:
          - cert-manager.io
          resources:
          - certificates
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - events.k8s.io
          resources:
          - events
          verbs:
          - create
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - internal.linstor.linbit.com
          resources:
          - '*'
          verbs:
          - create
          - delete
          - deletecollection
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - piraeus.io
          resources:
          - linstorclusters
          - linstornodeconnections
          - linstorsatellites
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - piraeus.io
          resources:
          - linstorclusters/finalizers
          - linstornodeconnections/finalizers
          - linstorsatellites/finalizers
          verbs:
          - update
        - apiGroups:
          - piraeus.io
          resources:
          - linstorclusters/status
          - linstornodeconnections/status
          - linstorsatelliteconfigurations/status
          - linstorsatellites/status
          verbs:
          - get
          - patch
          - update
        - apiGroups:
          - piraeus.io
          resources:
          - linstorsatelliteconfigurations
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - rbac.authorization.k8s.io
          resources:
          - clusterrolebindings
          - clusterroles
          - rolebindings
          - roles
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - security.openshift.io
          resourceNames:
          - privileged
          resources:
          - securitycontextconstraints
          verbs:
          - use
        - apiGroups:
          - snapshot.storage.k8s.io
          resources:
          - volumesnapshotclasses
          - volumesnapshots
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - snapshot.storage.k8s.io
          resources:
          - volumesnapshotcontents
          verbs:
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - snapshot.storage.k8s.io
          resources:
          - volumesnapshotcontents/status
          verbs:
          - patch
          - update
        - apiGroups:
          - storage.k8s.io
          resources:
          - csidrivers
          - csistoragecapacities
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - storage.k8s.io
          resources:
          - csinodes
          verbs:
          - get
          - list
          - patch
          - watch
        - apiGroups:
          - storage.k8s.io
          resources:
          - storageclasses
          verbs:
          - get
          - list
          - watch
        - apiGroups:
          - storage.k8s.io
          resources:
          - volumeattachments
          verbs:
          - delete
          - get
          - list
          - patch
          - watch
        - apiGroups:
          - storage.k8s.io
          resources:
          - volumeattachments/status
          verbs:
          - patch
        serviceAccountName: piraeus-operator-controller-manager
      - rules:
        - apiGroups:
          - admissionregistration.k8s.io
          resourceNames:
          - piraeus-operator-validating-webhook-configuration
          resources:
          - validatingwebhookconfigurations
          verbs:
          - get
          - list
          - watch
          - update
        serviceAccountName: piraeus-operator-gencert
      deployments:
      - label:
          app.kubernetes.io/component: piraeus-operator
          app.kubernetes.io/name: piraeus-datastore
        name: piraeus-operator-controller-manager
        spec:
          replicas: 1
          selector:
            matchLabels:
              app.kubernetes.io/component: piraeus-operator
              app.kubernetes.io/name: piraeus-datastore
          strategy: {}
          template:
            metadata:
              annotations:
                kubectl.kubernetes.io/default-container: manager
              labels:
                app.kubernetes.io/component: piraeus-operator
                app.kubernetes.io/name: piraeus-datastore
            spec:
              containers:
              - args:
                - --leader-elect
                - --metrics-bind-address=0
                - --namespace=$(NAMESPACE)
                - --zap-devel=$(ZAP_DEVEL)
                - --image-config-map-name=$(IMAGE_CONFIG_MAP_NAME)
                - --requeue-interval=$(REQUEUE_INTERVAL)
                command:
                - /manager
                env:
                - name: NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.namespace
                - name: ZAP_DEVEL
                  value: "false"
                - name: IMAGE_CONFIG_MAP_NAME
                  value: piraeus-operator-image-config
                - name: REQUEUE_INTERVAL
                  value: 1m
                image: quay.io/piraeusdatastore/piraeus-operator:v2.8.1
                livenessProbe:
                  httpGet:
                    path: /healthz
                    port: 8081
                  initialDelaySeconds: 15
                  periodSeconds: 20
                name: manager
                ports:
                - containerPort: 9443
                  name: webhook-server
                  protocol: TCP
                readinessProbe:
                  httpGet:
                    path: /readyz
                    port: 8081
                  initialDelaySeconds: 5
                  periodSeconds: 10
                resources:
                  limits:
                    cpu: 500m
                    memory: 256Mi
                  requests:
                    cpu: 10m
                    memory: 64Mi
                securityContext:
                  allowPrivilegeEscalation: false
                  readOnlyRootFilesystem: true
                volumeMounts:
                - mountPath: /tmp/k8s-webhook-server/serving-certs
                  name: cert
                  readOnly: true
              priorityClassName: system-cluster-critical
              securityContext:
                runAsNonRoot: true
              serviceAccountName: piraeus-operator-controller-manager
              terminationGracePeriodSeconds: 10
              tolerations:
              - effect: NoSchedule
                key: drbd.linbit.com/lost-quorum
              - effect: NoSchedule
                key: drbd.linbit.com/force-io-error
              volumes:
              - name: cert
                secret:
                  defaultMode: 420
                  secretName: webhook-server-cert
      - label:
          app.kubernetes.io/component: piraeus-operator-gencert
          app.kubernetes.io/name: piraeus-datastore
        name: piraeus-operator-gencert
        spec:
          replicas: 1
          selector:
            matchLabels:
              app.kubernetes.io/component: piraeus-operator-gencert
              app.kubernetes.io/name: piraeus-datastore
          strategy: {}
          template:
            metadata:
              annotations:
                kubectl.kubernetes.io/default-container: gencert
              labels:
                app.kubernetes.io/component: piraeus-operator-gencert
                app.kubernetes.io/name: piraeus-datastore
            spec:
              containers:
              - args:
                - --leader-elect
                - --namespace=$(NAMESPACE)
                - --zap-devel=$(ZAP_DEVEL)
                - --webhook-configuration-name=$(WEBHOOK_CONFIGURATION_NAME)
                - --webhook-service-name=$(WEBHOOK_SERVICE_NAME)
                - --webhook-tls-secret-name=$(WEBHOOK_TLS_SECRET_NAME)
                command:
                - /gencert
                env:
                - name: NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.namespace
                - name: WEBHOOK_CONFIGURATION_NAME
                  value: piraeus-operator-validating-webhook-configuration
                - name: WEBHOOK_SERVICE_NAME
                  value: piraeus-operator-webhook-service
                - name: WEBHOOK_TLS_SECRET_NAME
                  value: webhook-server-cert
                - name: ZAP_DEVEL
                  value: "false"
                image: quay.io/piraeusdatastore/piraeus-operator:v2.8.1
                livenessProbe:
                  httpGet:
                    path: /healthz
                    port: 8081
                  initialDelaySeconds: 15
                  periodSeconds: 20
                name: gencert
                readinessProbe:
                  httpGet:
                    path: /readyz
                    port: 8081
                  initialDelaySeconds: 5
                  periodSeconds: 10
                resources:
                  limits:
                    cpu: 50m
                    memory: 128Mi
                  requests:
                    cpu: 5m
                    memory: 32Mi
                securityContext:
                  allowPrivilegeEscalation: false
                  readOnlyRootFilesystem: true
              priorityClassName: system-cluster-critical
              securityContext:
                runAsNonRoot: true
              serviceAccountName: piraeus-operator-gencert
              terminationGracePeriodSeconds: 10
              tolerations:
              - effect: NoSchedule
                key: drbd.linbit.com/lost-quorum
              - effect: NoSchedule
                key: drbd.linbit.com/force-io-error
      permissions:
      - rules:
        - apiGroups:
          - ""
          resources:
          - configmaps
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - patch
          - delete
        - apiGroups:
          - coordination.k8s.io
          resources:
          - leases
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - patch
          - delete
        - apiGroups:
          - ""
          resources:
          - events
          verbs:
          - create
          - patch
        serviceAccountName: piraeus-operator-controller-manager
      - rules:
        - apiGroups:
          - ""
          resources:
          - secrets
          verbs:
          - get
          - list
          - watch
          - create
          - patch
          - update
        - apiGroups:
          - ""
          resources:
          - configmaps
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - patch
          - delete
        - apiGroups:
          - coordination.k8s.io
          resources:
          - leases
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - patch
          - delete
        - apiGroups:
          - ""
          resources:
          - events
          verbs:
          - create
          - patch
        serviceAccountName: piraeus-operator-gencert
    strategy: deployment
  installModes:
  - supported: true
    type: OwnNamespace
  - supported: false
    type: SingleNamespace
  - supported: false
    type: MultiNamespace
  - supported: false
    type: AllNamespaces
  keywords:
  - storage
  links:
  - name: Piraeus Operator
    url: https://piraeus.io
  - name: Source Code
    url: https://github.com/piraeusdatastore/piraeus-operator
  maturity: alpha
  minKubeVersion: 1.22.0
  nativeAPIs:
  - group: ""
    kind: ConfigMap
    version: v1
  - group: ""
    kind: Service
    version: v1
  - group: ""
    kind: ServiceAccount
    version: v1
  - group: apps
    kind: DaemonSet
    version: v1
  - group: apps
    kind: Deployment
    version: v1
  - group: rbac.authorization.k8s.io
    kind: ClusterRole
    version: v1
  - group: rbac.authorization.k8s.io
    kind: ClusterRoleBinding
    version: v1
  - group: rbac.authorization.k8s.io
    kind: Role
    version: v1
  - group: rbac.authorization.k8s.io
    kind: RoleBinding
    version: v1
  - group: storage.k8s.io
    kind: CSIDriver
    version: v1
  provider:
    name: Piraeus Datastore
    url: https://piraeus.io
  version: 2.8.1
  webhookdefinitions:
  - admissionReviewVersions:
    - v1
    containerPort: 443
    deploymentName: piraeus-operator-controller-manager
    failurePolicy: Fail
    generateName: vlinstorcluster.kb.io
    rules:
    - apiGroups:
      - piraeus.io
      apiVersions:
      - v1
      operations:
      - CREATE
      - UPDATE
      resources:
      - linstorclusters
    sideEffects: None
    targetPort: 9443
    type: ValidatingAdmissionWebhook
    webhookPath: /validate-piraeus-io-v1-linstorcluster
  - admissionReviewVersions:
    - v1
    containerPort: 443
    deploymentName: piraeus-operator-controller-manager
    failurePolicy: Fail
    generateName: vlinstornodeconnection.kb.io
    rules:
    - apiGroups:
      - piraeus.io
      apiVersions:
      - v1
      operations:
      - CREATE
      - UPDATE
      resources:
      - linstornodeconnections
    sideEffects: None
    targetPort: 9443
    type: ValidatingAdmissionWebhook
    webhookPath: /validate-piraeus-io-v1-linstornodeconnection
  - admissionReviewVersions:
    - v1
    containerPort: 443
    deploymentName: piraeus-operator-controller-manager
    failurePolicy: Fail
    generateName: vlinstorsatellite.kb.io
    rules:
    - apiGroups:
      - piraeus.io
      apiVersions:
      - v1
      operations:
      - CREATE
      - UPDATE
      resources:
      - linstorsatellites
    sideEffects: None
    targetPort: 9443
    type: ValidatingAdmissionWebhook
    webhookPath: /validate-piraeus-io-v1-linstorsatellite
  - admissionReviewVersions:
    - v1
    containerPort: 443
    deploymentName: piraeus-operator-controller-manager
    failurePolicy: Fail
    generateName: vlinstorsatelliteconfiguration.kb.io
    rules:
    - apiGroups:
      - piraeus.io
      apiVersions:
      - v1
      operations:
      - CREATE
      - UPDATE
      resources:
      - linstorsatelliteconfigurations
    sideEffects: None
    targetPort: 9443
    type: ValidatingAdmissionWebhook
    webhookPath: /validate-piraeus-io-v1-linstorsatelliteconfiguration
  - admissionReviewVersions:
    - v1
    containerPort: 443
    deploymentName: piraeus-operator-controller-manager
    failurePolicy: Fail
    generateName: vstorageclass.kb.io
    rules:
    - apiGroups:
      - storage.k8s.io
      apiVersions:
      - v1
      operations:
      - CREATE
      - UPDATE
      resources:
      - storageclasses
    sideEffects: None
    targetPort: 9443
    type: ValidatingAdmissionWebhook
    webhookPath: /validate-storage-k8s-io-v1-storageclass
